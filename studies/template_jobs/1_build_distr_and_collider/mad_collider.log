mylhcbeam = 1;

      ! Get the toolkit
      call,file=
        "acc-models-lhc/toolkit/macro.madx";
      ;

      ! Build sequence
      option, -echo,-warn,-info;
      if (mylhcbeam==4){
        call,file="acc-models-lhc/lhc_acc-models-lhc_b4.seq";
      } else {
        call,file="acc-models-lhc/lhc_acc-models-lhc.seq";
      };
      option, -echo, warn,-info;
      ;
slicefactor = 4;

        myslice: macro = {
        if (MBX.4L2->l>0) {
          select, flag=makethin, clear;
          select, flag=makethin, class=mb, slice=2;
          select, flag=makethin, class=mq, slice=2 * slicefactor;
          select, flag=makethin, class=mqxa,  slice=16 * slicefactor;  !old triplet
          select, flag=makethin, class=mqxb,  slice=16 * slicefactor;  !old triplet
          select, flag=makethin, class=mqxc,  slice=16 * slicefactor;  !new mqxa (q1,q3)
          select, flag=makethin, class=mqxd,  slice=16 * slicefactor;  !new mqxb (q2a,q2b)
          select, flag=makethin, class=mqxfa, slice=16 * slicefactor;  !new (q1,q3 v1.1)
          select, flag=makethin, class=mqxfb, slice=16 * slicefactor;  !new (q2a,q2b v1.1)
          select, flag=makethin, class=mbxa,  slice=4;   !new d1
          select, flag=makethin, class=mbxf,  slice=4;   !new d1 (v1.1)
          select, flag=makethin, class=mbrd,  slice=4;   !new d2 (if needed)
          select, flag=makethin, class=mqyy,  slice=4 * slicefactor;;   !new q4
          select, flag=makethin, class=mqyl,  slice=4 * slicefactor;;   !new q5
          select, flag=makethin, class=mbh,   slice=4;   !11T dipoles
          select, flag=makethin, pattern=mbx\.,    slice=4;
          select, flag=makethin, pattern=mbrb\.,   slice=4;
          select, flag=makethin, pattern=mbrc\.,   slice=4;
          select, flag=makethin, pattern=mbrs\.,   slice=4;
          select, flag=makethin, pattern=mbh\.,    slice=4;
          select, flag=makethin, pattern=mqwa\.,   slice=4 * slicefactor;
          select, flag=makethin, pattern=mqwb\.,   slice=4 * slicefactor;
          select, flag=makethin, pattern=mqy\.,    slice=4 * slicefactor;
          select, flag=makethin, pattern=mqm\.,    slice=4 * slicefactor;
          select, flag=makethin, pattern=mqmc\.,   slice=4 * slicefactor;
          select, flag=makethin, pattern=mqml\.,   slice=4 * slicefactor;
          select, flag=makethin, pattern=mqtlh\.,  slice=2 * slicefactor;
          select, flag=makethin, pattern=mqtli\.,  slice=2 * slicefactor;
          select, flag=makethin, pattern=mqt\.  ,  slice=2 * slicefactor;
          !thin lens
          option rbarc=false; beam;
          use,sequence=lhcb1; makethin,sequence=lhcb1,makedipedge=true,style=teapot;
          use,sequence=lhcb2; makethin,sequence=lhcb2,makedipedge=true,style=teapot;
          option rbarc=true;
        } else {
          print, text="Sequence is already thin";
        };
          is_thin=1;
        };
    ;
exec, myslice;

    nrj=6800;
    beam,particle=proton,sequence=lhcb1,energy=nrj,npart=1.15E11,sige=4.5e-4;
    beam,particle=proton,sequence=lhcb2,energy=nrj,bv = -1,npart=1.15E11,sige=4.5e-4;
    ;

        !Cycling w.r.t. to IP3 (mandatory to find closed orbit in collision in the presence of errors)
        if (mylhcbeam<3){
        seqedit, sequence=lhcb1; flatten; cycle, start=IP3; flatten; endedit;
        };
        seqedit, sequence=lhcb2; flatten; cycle, start=IP3; flatten; endedit;
        ;

        ! Set twiss formats for MAD-X parts (macro from opt. toolkit)
        exec, twiss_opt;
        ;
call, file="acc-models-lhc/RunIII_dev/Proton_2024/opticsfile.37";
on_alice := on_alice_normalized * 7000./nrj;
on_lhcb := on_lhcb_normalized * 7000./nrj;
use, sequence=lhcb1;
twiss;
use, sequence=lhcb2;
twiss;
nrj = 450;
bv_aux = 1;

    beam, particle=proton,sequence=lhcb1,
        energy=450,
        sigt=0.0001,
        bv=1,
        npart=1,
        sige=1e-06,
        ex=2.0850490847999996e-09,
        ey=2.0850490847999996e-09,
        mass=0.93827208816,
        charge=1.0;
    ;
use, sequence=lhcb1;
use, sequence=lhcb1;
twiss;

    beam, particle=proton,sequence=lhcb2,
        energy=450,
        sigt=0.0001,
        bv=-1,
        npart=1,
        sige=1e-06,
        ex=2.0850490847999996e-09,
        ey=2.0850490847999996e-09,
        mass=0.93827208816,
        charge=1.0;
    ;
use, sequence=lhcb2;
use, sequence=lhcb2;
twiss;
use, sequence=lhcb1;
exec, crossing_disable;
exec, crossing_save;
ver_lhc_run = 3.0;
par_verbose = 1;
call, file="/afs/cern.ch/work/a/aradosla/private/miniforge3/lib/python3.10/site-packages/xmask/lhc/madx_scripts/submodule_04a_s1_prepare_nom_twiss_table.madx";
call, file="/afs/cern.ch/work/a/aradosla/private/miniforge3/lib/python3.10/site-packages/xmask/lhc/madx_scripts/submodule_04e_s1_synthesize_knobs.madx";
